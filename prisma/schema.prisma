generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id           Int            @id @default(autoincrement())
  title        String
  content      String
  authorId     Int
  author       User           @relation(fields: [authorId], references: [id])
  published    Boolean        @default(false)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  postCategory PostCategory[]

  @@map("newPostTable")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  email    String   @unique
  role     UserRole @default(user)
  profile  Profile? // one to one 
  post     Post[] // one to many 

  @@map("users")
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique

  user User @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model Category {
  id           Int            @id @default(autoincrement())
  name         String
  postCategory PostCategory[] // many to many

  @@map("categorys")
}

// intermediate table

model PostCategory {
  postId     Int
  post       Post     @relation(fields: [postId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId]) // using composite key we can modyfiy this id into primary key
  @@map("post_category")
}

enum UserRole {
  user
  admin
}
